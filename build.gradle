group 'co.wolox.qualityassurance.mathjs'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: "org.sonarqube"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
    }
    ext{
        serenityVersion = '3.1.5'
        serenityGradleVersion =  '2.4.34'

    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:$rootProject.ext.serenityGradleVersion")
    }
}

test {
    systemProperty "cucumber.options", System.getProperty("cucumber.options")
}

sonarqube {
    properties {
        property "sonar.projectKey", "serenity-restassured-bootstrap"
        property "sonar.organization", "wolox"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.scm.disabled", true
    }
}

dependencies {
    implementation "net.serenity-bdd:serenity-core:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-junit:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-cucumber:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay-rest:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-ensure:$rootProject.ext.serenityVersion"


    implementation 'com.google.code.gson:gson:2.8.9'
    testImplementation 'io.rest-assured:json-schema-validator:4.4.0'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.assertj:assertj-core:3.21.0'
    testImplementation 'org.slf4j:slf4j-simple:1.7.32'
    testImplementation 'org.hamcrest:hamcrest-core:1.3'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(Test){
    systemProperties = System.properties
    maxParallelForks = Runtime.runtime.availableProcessors()
}

gradle.startParameter.continueOnFailure = true